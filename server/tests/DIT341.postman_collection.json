{
	"info": {
		"_postman_id": "39c5d8eb-0e48-4877-bda2-be51d5ce33f5",
		"name": "DIT341",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User requests",
			"item": [
				{
					"name": "Create a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f666e1e-e197-4ec1-bc54-d118eb59bd00",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var userId = jsonData._id;\r",
									"pm.environment.set(\"user_id\", userId);\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dominique\");\r",
									"    pm.expect(jsonData.email).to.eql(\"dominique@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"cake\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"dominique@gmail.com\",\r\n    \"password\": \"cake\",\r\n    \"name\": \"Dominique\",\r\n    \"projects\": [],\r\n    \"materials\": []\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8239bae-1042-4ef6-86d9-be131fdad1a0",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// TODO: more assertions..."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2e63214-f862-4492-bc91-3914548e9a36",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dominique\");\r",
									"    pm.expect(jsonData.email).to.eql(\"dominique@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"cake\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non-existent user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47a16084-a1ca-44e8-8edc-90bd1ab85c25",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"// TODO: assert certain error message"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/users/5f5b219557601403d8e68957",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"5f5b219557601403d8e68957"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6e4c330-e172-4b7f-8729-827722bd6a24",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// TODO: more assertions..."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3054ea5d-3fb8-4227-bb12-0020685d8efa",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.password).to.eql(\"hullabub\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"hullabub\",\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55c9e38a-b69f-4863-9015-a717ec301320",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Shog\");\r",
									"    pm.expect(jsonData.email).to.eql(\"sploot@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"shuggie\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"sploot@gmail.com\",\r\n    \"password\": \"shuggie\",\r\n    \"name\": \"Shog\",\r\n    \"projects\": [],\r\n    \"materials\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Project requests",
			"item": [
				{
					"name": "Create a project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab2408f9-68de-42ed-a3da-6a95183e0991",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var projectId = jsonData._id;\r",
									"pm.environment.set(\"project_id\", projectId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct project response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dominique's scarf\");\r",
									"    pm.expect(jsonData.status).to.eql(\"Not started\"),\r",
									"        pm.expect(jsonData.priority).to.eql(\"Low\"),\r",
									"        pm.expect(jsonData.note).to.eql(\"For Dominique's birthday\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Dominique's scarf\",\r\n    \"date\": \"2018-11-10 22:26:12.111Z\",\r\n    \"status\": \"Not started\",\r\n    \"priority\": \"Low\",\r\n    \"note\": \"For Dominique's birthday\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a project for user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "649c578c-6206-4a84-8660-2862c7e69bbb",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var projectId = jsonData._id;\r",
									"pm.environment.set(\"project_id\", projectId);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Dominique's scarf\",\r\n    \"date\": \"2018-11-10 22:26:12.111Z\",\r\n    \"status\": \"Not started\",\r\n    \"priority\": \"Low\",\r\n    \"note\": \"For Dominique's birthday\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non-existent project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a2fdc62-5e7b-4fab-8a55-d8358f51a0f1",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"// TODO: assert certain error message"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/projects/5f5b219557601403d8e68953",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"projects",
								"5f5b219557601403d8e68953"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a specific project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "739bbd42-5298-4348-8c31-e0060b79ba7d",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct project response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dominique's scarf\");\r",
									"    pm.expect(jsonData.status).to.eql(\"Not started\"),\r",
									"    pm.expect(jsonData.priority).to.eql(\"Low\"),\r",
									"    pm.expect(jsonData.note).to.eql(\"For Dominique's birthday\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/projects/{{project_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55bbbdf4-4718-4026-9cc9-e2f004ba7db7",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// TODO: more assertions..."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all projects from specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d57160a8-4def-4622-9696-400fb2027804",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// TODO: more assertions..."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d7cd15a6-c240-44dd-9894-1dda328985cc",
								"exec": [
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// TODO: more assertions..."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/projects/{{project_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Yarn requests",
			"item": [
				{
					"name": "yarns-post",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "beef5332-7860-48a8-a2cc-31db548f2356",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var yarnID = jsonData._id;\r",
									"pm.environment.set(\"yarn_id\", yarnID);\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct yarn response\", function() {\r",
									"    pm.expect(jsonData.brand).to.eql(\"adlibris\");\r",
									"    pm.expect(jsonData.color).to.eql(\"purple\");\r",
									"    pm.expect(jsonData.weight).to.eql(\"20\");\r",
									"    pm.expect(jsonData.fiber).to.eql(\"wool\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"adlibris\",\r\n    \"color\": \"purple\",\r\n    \"weight\": \"20\",\r\n    \"fiber\": \"wool\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/projects/{{project_id}}/yarns",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"projects",
								"{{project_id}}",
								"yarns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create yarn for user&project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0c701c8-d562-4df8-9d04-d2244b0271d2",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var yarnID = jsonData._id;\r",
									"pm.environment.set(\"yarn_id\", yarnID);\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct yarn response\", function() {\r",
									"    pm.expect(jsonData.brand).to.eql(\"adlibris\");\r",
									"    pm.expect(jsonData.color).to.eql(\"purple\");\r",
									"    pm.expect(jsonData.weight).to.eql(\"20\");\r",
									"    pm.expect(jsonData.fiber).to.eql(\"wool\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"adlibris\",\r\n    \"color\": \"purple\",\r\n    \"weight\": \"20\",\r\n    \"fiber\": \"wool\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/projects/{{project_id}}/yarns",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"projects",
								"{{project_id}}",
								"yarns"
							]
						}
					},
					"response": []
				},
				{
					"name": "yarns-update-put",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b9493b-807f-4900-92df-708eda8b4a13",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var yarnID = jsonData._id;\r",
									"pm.environment.set(\"yarn_id\", yarnID);\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct yarn response\", function() {\r",
									"    pm.expect(jsonData.brand).to.eql(\"brandname\");\r",
									"    pm.expect(jsonData.color).to.eql(\"white\");\r",
									"    pm.expect(jsonData.weight).to.eql(\"34\");\r",
									"    pm.expect(jsonData.fiber).to.eql(\"cotton\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"brandname\",\r\n    \"color\": \"white\",\r\n    \"weight\": \"34\",\r\n    \"fiber\": \"cotton\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/materials/{{material_id}}/yarns/{{yarn_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"materials",
								"{{material_id}}",
								"yarns",
								"{{yarn_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "yarns-update-patch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b025ca3-ba00-4e6f-a2aa-35115312c0b7",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var yarnID = jsonData._id;\r",
									"pm.environment.set(\"yarn_id\", yarnID);\r",
									"\r",
									"pm.test(\"Correct status code\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct yarn response\", function() {\r",
									"    pm.expect(jsonData.color).to.eql(\"yellow\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"color\": \"yellow\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}/materials/{{material_id}}/yarns",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"materials",
								"{{material_id}}",
								"yarns"
							]
						}
					},
					"response": []
				},
				{
					"name": "yarns-delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Needle requests",
			"item": [
				{
					"name": "Create new needle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d91a4c8a-11f9-4592-b8f6-9e76391be3fd",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var needleID = jsonData._id;\r",
									"pm.environment.set(\"needle_id\", needleID);\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct needle response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dymondwood double tips\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Dymondwood double tips\",\r\n\"source_name\": \"Hobbii.se\",\r\n\"cost\": 35.00,\r\n\"owned\": false,\r\n\"size\": \"3mm\",\r\n\"note\": \"zOMG, I need these!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/needles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"needles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all needles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc54b126-22f8-43e2-943b-b6c006a9ad6f",
								"exec": [
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// TODO: more assertions..."
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/needles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"needles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a needle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa4efad6-b989-419a-8c56-c91b94f06109",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct needle response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Dymondwood double tips\");\r",
									"    pm.expect(jsonData.cost).to.eql(35.00);\r",
									"    pm.expect(jsonData.owned).to.eql(false);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/needles/{{needle_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"needles",
								"{{needle_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a non-existent needle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee75a4e4-10ca-467c-ae6c-174958cbfcd3",
								"exec": [
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"// TODO: assert certain error message"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/needles/5f5b219557601403d8e68953",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"needles",
								"5f5b219557601403d8e68953"
							]
						}
					},
					"response": []
				},
				{
					"name": "Full update needle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4441249-eb81-4a37-b33e-72de1e91b18c",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct needle response\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(\"Square carbonz\");\r",
									"    pm.expect(jsonData.cost).to.eql(42.00);\r",
									"    pm.expect(jsonData.owned).to.eql(true)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Square carbonz\",\r\n\"source_name\": \"Hobbii.se\",\r\n\"cost\": 42.00,\r\n\"owned\": true,\r\n\"size\": \"3.5mm\",\r\n\"note\": \"Awsome needles\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/needles/{{needle_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"needles",
								"{{needle_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Part update needle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2dda3fb5-ae9c-43a3-bb78-7564afc1cea1",
								"exec": [
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct yarn response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.owned).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"owned\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/needles/{{needle_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"needles",
								"{{needle_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a needle",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "966d2a54-41f5-494e-80b4-680c2d789388",
								"exec": [
									"pm.test(\"Correct status code\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// TODO: more assertions..."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/needles/{{needle_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"needles",
								"{{needle_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}